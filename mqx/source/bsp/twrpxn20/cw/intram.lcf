/* lcf file for MPC5668xRM processors, running in DPM (second core unused)    */
/* 2 MB Flash (0x0000_0000->0x1FFF_FFFF)
 * 592KB SRAM(512 Kbytes: 0x4000_0000->0x4007_FFFF, 80 Kbytes: 0x4008_0000->0x4009_3FFF  */

MEMORY
{
    resetvector:           org = 0x00000000,   len = 0x00000008

    exception_handlers_p0: org = 0x40000000,   len = 0x00001000
    internal_ram:      	   org = 0x40001000,   len = 0x0003A000
    stack :                org = 0x4003B000,   len = 0x0003A000 /* Start location for Stack */

    /* Kernel space starts after RAM variables (Location of MQX Kernel data + MQX heap) */
    end_of_kd:             org = 0x4003AFF0,   len = 0x00000000
    internal_uncached_ram: org = 0x40075000,   len = 0x0001E000

}


SECTIONS
{
 

    .__bam_bootarea LOAD (0x00000000): {} > resetvector

    GROUP : {

      .ivor_branch_table_p0 ALIGN (2048) : {}
      .intc_hw_branch_table_p0 ALIGN (2048) : {}           
      .__exception_handlers_p0 : {}

    } > exception_handlers_p0


    GROUP : {
      .intc_sw_isr_vector_table_p0 ALIGN (2048) : {}

      .init : {}
      .init_vle (VLECODE) : {
        *(.init)
        *(.init_vle)
      }

      
      .text : {} 
      .text_vle (VLECODE) : {
         *(.text)
         *(.text_vle)
      }


      .dispatch : { * (DISPATCH) }
      .ipsum : { * (IPSUM) }

      .rodata (CONST) : {
         *(.rdata)
         *(.rodata)
      }
  
      .ctors : {}
      .dtors : {}
      extab : {}
      extabindex : {}

      .__uninitialized_intc_handlertable ALIGN(0x10) : {}

      .data   : {}
      .sdata  : {}
      .sbss   : {}
      .sdata2 : {}
      .sbss2  : {}
      .bss    : {}

      .kernel_data : { __KERNEL_DATA_START = ALIGN(0x10); }

    } > internal_ram

    .end_of_kernel_data :
    {
       __KERNEL_DATA_END = .;
    } > end_of_kd
    
}

__KERNEL_DATA_VERIFY_ENABLE = 0;  /* Test SDRAM read/write */

__PRIVATE_RAM_START = ADDR(internal_ram);
__PRIVATE_RAM_SIZE = SIZEOF(internal_ram);

/*
__UNCACHED_DATA_START = __KERNEL_DATA_START;
__UNCACHED_DATA_END = __KERNEL_DATA_END;
__UNCACHED_DATA_SIZE = (__UNCACHED_DATA_END) - (__UNCACHED_DATA_START);
*/

__UNCACHED_DATA_START = ADDR(internal_uncached_ram);
__UNCACHED_DATA_SIZE = SIZEOF(internal_uncached_ram);
__UNCACHED_DATA_END = ADDR(internal_uncached_ram)+SIZEOF(internal_uncached_ram);

_stack_addr = ADDR(stack)+SIZEOF(stack);
_stack_end  = ADDR(stack);




/* Exceptions Location (used in Exceptions.c for IVPR initialization)*/
EXCEPTION_HANDLERS    = ADDR(exception_handlers_p0);

L2SRAM_LOCATION = 0x40000000;
L2SRAM_INIT_LEN = 0;

